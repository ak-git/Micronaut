[versions]
javamodularity-moduleplugin = '1.8.15'
sonarqube = '6.1.0.5360'
jacocolog = '3.1.0'
spotbugs = '6.1.11'
ben-manes-versions = '0.52.0'
nebula-lint = '20.5.8'
jgitver = '0.10.0-rc03'

jspecify = '1.0.0'
junit = '5.13.0-M3'
assertj = '4.0.0-M1'

johnrengelman-shadow = '8.1.1'
io-micronaut = '4.5.3'

apiguardian-api = '1.1.2'

[plugins]
javamodularity-moduleplugin = { id = 'org.javamodularity.moduleplugin', version.ref = 'javamodularity-moduleplugin' }
sonarqube = { id = 'org.sonarqube', version.ref = 'sonarqube' }
jacocolog = { id = 'org.barfuin.gradle.jacocolog', version.ref = 'jacocolog' }
spotbugs = { id = 'com.github.spotbugs', version.ref = 'spotbugs' }
ben-manes-versions = { id = 'com.github.ben-manes.versions', version.ref = 'ben-manes-versions' }
nebula-lint = { id = 'nebula.lint', version.ref = 'nebula-lint' }
jgitver = { id = 'fr.brouillard.oss.gradle.jgitver', version.ref = 'jgitver' }

johnrengelman-shadow = { id = 'com.github.johnrengelman.shadow', version.ref = 'johnrengelman-shadow' }
micronaut-application = { id = 'io.micronaut.minimal.application', version.ref = 'io-micronaut' }
micronaut-library = { id = 'io.micronaut.minimal.library', version.ref = 'io-micronaut' }
micronaut-docker = { id = 'io.micronaut.docker', version.ref = 'io-micronaut' }
micronaut-aot = { id = 'io.micronaut.aot', version.ref = 'io-micronaut' }

[libraries]
jspecify = { module = 'org.jspecify:jspecify', version.ref = 'jspecify' }
slf4j-api = { module = 'org.slf4j:slf4j-api' }

junit = { module = 'org.junit:junit-bom', version.ref = 'junit' }
junit-jupiter = { module = 'org.junit.jupiter:junit-jupiter' }
junit-jupiter-api = { module = 'org.junit.jupiter:junit-jupiter-api' }
junit-jupiter-engine = { module = 'org.junit.jupiter:junit-jupiter-engine' }
junit-platform-launcher = { module = 'org.junit.platform:junit-platform-launcher' }
assertj = { module = 'org.assertj:assertj-core', version.ref = 'assertj' }

jakarta-inject-api = { module = 'jakarta.inject:jakarta.inject-api' }
apiguardian-api = { module = 'org.apiguardian:apiguardian-api', version.ref = 'apiguardian-api' }
micronaut-core = { module = 'io.micronaut:micronaut-core' }
micronaut-test-core = { module = 'io.micronaut.test:micronaut-test-core' }
junit-platform-commons = { module = 'org.junit.platform:junit-platform-commons' }

[bundles]
test-implementation = ['junit-jupiter-api', 'assertj']
test-compile = ['junit-jupiter', 'junit-jupiter-engine']
test-runtime = ['junit-jupiter-engine', 'junit-platform-launcher']
test-micronaut-implementation = ['jakarta-inject-api', 'apiguardian-api', 'junit-platform-commons', 'micronaut-core', 'micronaut-test-core']
